apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'idea'
apply plugin: 'eclipse'

group = 'org.yfyang.osy'
version = '1.0-SNAPSHOT'
archivesBaseName = 'plum'
buildDir = 'target'


sourceCompatibility = 1.6

configurations {
    provided
}

sourceSets {
    main {
        compileClasspath += configurations.provided
    }
    test {
        compileClasspath += configurations.provided
        runtimeClasspath += configurations.provided 
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    //Asm model
    compile 'org.ow2.asm:asm:4.0'

    //Commons tools
    compile 'commons-io:commons-io:1.4'
    compile 'org.apache.commons:commons-lang3:3.1'
    compile 'commons-collections:commons-collections:3.2.1'
    compile 'commons-codec:commons-codec:1.7'
    compile 'log4j:log4j:1.2.17'
    compile 'com.google.guava:guava:13.0.1'
    compile 'joda-time:joda-time:2.1'
    compile 'net.sf.dozer:dozer:5.4.0'
    compile 'javax.xml.bind:jaxb-api:2.2.2'


    //Spring Dependency
    compile 'org.springframework:spring-context:3.2.0.RELEASE'
    compile 'org.springframework:spring-context-support:3.2.0.RELEASE'
    compile 'org.springframework:spring-web:3.2.0.RELEASE'
    compile 'org.springframework:spring-beans:3.2.0.RELEASE'
    compile 'org.springframework:spring-expression:3.2.0.RELEASE'
    compile 'org.springframework:spring-core:3.2.0.RELEASE'
    compile 'org.springframework:spring-jdbc:3.2.0.RELEASE'
    compile 'org.springframework:spring-webmvc:3.2.0.RELEASE'
    compile 'org.springframework:spring-tx:3.2.0.RELEASE'
    compile 'org.springframework:spring-aop:3.2.0.RELEASE'
    compile 'org.springframework:spring-aspects:3.2.0.RELEASE'
    compile 'org.springframework:spring-asm:3.1.3.RELEASE'

    //mail
    compile 'javax.mail:mail:1.4.5'
    // aop 
    compile 'org.aspectj:aspectjweaver:1.7.1'

    //Logging
    
    compile 'ch.qos.logback:logback-classic:1.0.9'
    runtime 'org.slf4j:jcl-over-slf4j:1.7.2'
    compile 'javax.inject:javax.inject:1'

    // Validation
    compile 'javax.validation:validation-api:1.0.0.GA'
    compile 'org.hibernate:hibernate-validator:4.3.1.Final'

    // Database 
    compile 'mysql:mysql-connector-java:5.1.22'
    
    //Framekwork
    compile 'org.freemarker:freemarker:2.3.19'

    //Json
    compile 'com.fasterxml.jackson.core:jackson-databind:2.1.0'
    compile 'com.fasterxml.jackson.module:jackson-module-jaxb-annotations:2.1.0'
 
 	// File upload
 	compile 'commons-fileupload:commons-fileupload:1.2.2'	

 	// shiro
 	compile 'org.apache.shiro:shiro-core:1.2.1'
 	compile 'org.apache.shiro:shiro-spring:1.2.1'
 	compile 'org.apache.shiro:shiro-web:1.2.1'
 	compile 'org.apache.shiro:shiro-ehcache:1.2.1'

 	// Servlet
    provided 'javax.servlet:servlet-api:2.5'
    provided 'javax.servlet.jsp:jsp-api:2.1'
    compile('javax.servlet.jsp.jstl:jstl-api:1.2'){
    	 exclude(group: 'javax.el', module: 'el-api')
    }
    compile('org.glassfish.web:jstl-impl:1.2'){
    	 exclude(group: 'javax.el', module: 'el-api')
    }

    // Database Pool
    compile 'com.alibaba:druid:0.2.10'

    compile 'org.mybatis:mybatis:3.1.1'
    compile 'org.mybatis:mybatis-spring:1.1.1'
    compile 'org.mybatis.caches:mybatis-ehcache:1.0.1'	

    // Test
    testCompile 'org.springframework:spring-test:3.1.3.RELEASE'
    testCompile 'junit:junit:4.11'
    // mockito
    testCompile 'org.mockito:mockito-core:1.9.5'
    testCompile 'org.powermock:powermock-module-junit4:1.5'
    testCompile('org.powermock:powermock-api-mockito:1.5'){
    	 exclude(group: 'org.mockito', module: 'mockito-all')
    }
    //selenium
    testCompile 'org.seleniumhq.selenium:selenium-java:2.28.0'
    testCompile 'org.seleniumhq.selenium:selenium-remote-driver:2.28.0'   
}


idea.module{
    iml {
        beforeMerged { module ->
            module.dependencies.clear()
            module.excludeFolders.clear()
        }
        whenMerged { module ->
            module.dependencies*.exported = true
            module.excludeFolders += module.pathFactory.path(file(".gradle"))
            module.excludeFolders += module.pathFactory.path(file("$buildDir/bundles"))
            module.excludeFolders += module.pathFactory.path(file("$buildDir/classes"))
            module.excludeFolders += module.pathFactory.path(file("$buildDir/dependency-cache"))
            module.excludeFolders += module.pathFactory.path(file("$buildDir/libs"))
            module.excludeFolders += module.pathFactory.path(file("$buildDir/reports"))
            module.excludeFolders += module.pathFactory.path(file("$buildDir/test-results"))
            module.excludeFolders += module.pathFactory.path(file("$buildDir/tmp"))
            module.excludeFolders += module.pathFactory.path(file("$buildDir/matrix"))
            module.excludeFolders += module.pathFactory.path(file("$buildDir/resources"))
            module.excludeFolders -= module.pathFactory.path(file("$buildDir"))
        }
    }
    downloadSources = true
    scopes.COMPILE.plus += configurations.provided
}

idea.project.ipr {
    beforeMerged { project ->
        project.modulePaths.clear()
    }
    withXml { provider ->
        provider.node.component.find { it.@name == 'VcsDirectoryMappings' }.mapping.@vcs = 'Git'
    }
}

eclipse {
    classpath {
        plusConfigurations.add( configurations.provided )
    }
}